<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <RuntimeIdentifier>browser-wasm</RuntimeIdentifier>
        <WasmMainJSPath>AppBundle\main.js</WasmMainJSPath>
        <OutputType>Exe</OutputType>
        <RunAOTCompilation>true</RunAOTCompilation>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
        <PublishTrimmed>true</PublishTrimmed>
        <SelfContained>true</SelfContained>
        <InvariantGlobalization>true</InvariantGlobalization>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <EmccInitialHeapSize>1073741824</EmccInitialHeapSize>
        <EmccTotalMemory>1073741824</EmccTotalMemory>
    </PropertyGroup>
    <PropertyGroup>
        <TrimMode>link</TrimMode>
        <!--These can help when debugging weird exceptions especially when reflection is involved. See https://github.com/dotnet/corert/blob/master/Documentation/using-corert/optimizing-corert.md -->
        <!--RootAllApplicationAssemblies: False -> TrimMode:link See https://github.com/dotnet/runtimelab/issues/597 and https://github.com/dotnet/runtimelab/blob/feature/NativeAOT/docs/using-nativeaot/optimizing.md -->
        <IlcGenerateCompleteTypeMetadata>true</IlcGenerateCompleteTypeMetadata> <!-- todo check if needed -->
        <IlcGenerateStackTraceData Condition="'$(Configuration.toUpper())' != 'DEBUG'">false</IlcGenerateStackTraceData>
        <IlcDisableUnhandledExceptionExperience>true</IlcDisableUnhandledExceptionExperience>
        <StripSymbols Condition="'$(Configuration.toUpper())' != 'DEBUG'">true</StripSymbols>
    </PropertyGroup>

    <ItemGroup>
        <WasmExtraFilesToDeploy Include="AppBundle\**"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia.Browser" Version="$(AvaloniaVersion)"/>
    </ItemGroup>

    <ItemGroup> 
        <ProjectReference Include="..\SpellWork.Avalonia\SpellWork.Avalonia.csproj"/>
    </ItemGroup>

    <ItemGroup>
      <RdXmlFile Include="rd.xml" />
    </ItemGroup>

</Project>
